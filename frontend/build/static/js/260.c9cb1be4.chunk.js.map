{"version":3,"file":"static/js/260.c9cb1be4.chunk.js","mappings":"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","sources":["pages/home/components/GameItem.tsx","pages/home/components/HomeCard.tsx","pages/home/components/RankCard.tsx","pages/home/components/RankItem.tsx","pages/home/components/TodayGameCard.tsx","pages/home/index.tsx"],"sourcesContent":["import { GameType } from \"src/types\";\r\nimport { Title } from 'src/components'\r\nimport styled from \"styled-components\";\r\n\r\nconst GameItemWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  border-radius: 10px;\r\n  width: 80%;\r\n  height: 80px;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`\r\n\r\nconst InfomWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 200px;\r\n  height: 80%;\r\n  align-items: center;\r\n  gap: 10px;\r\n`\r\n\r\nconst GameItem = ( props : GameItemProp ) => {\r\n\r\n  const { game, onClick } = props;\r\n\r\n  const { \r\n    gameId, chatroomId, datetime, \r\n    homeClubName, awayClubName, stadiumName } = game\r\n\r\n  return(\r\n    <GameItemWrapper onClick={ onClick }>\r\n        <img alt={ homeClubName }></img>\r\n        <InfomWrapper>\r\n          <Title>VS</Title>\r\n          <Title type=\"small\">{ datetime }</Title>\r\n        </InfomWrapper>\r\n        <img alt={ awayClubName }></img>\r\n    </GameItemWrapper>\r\n  )\r\n}\r\n\r\nexport default GameItem;\r\n\r\ntype GameItemProp  = {\r\n  game?: GameType\r\n  onClick? : () => void\r\n}\r\n\r\n ","import styled, { css } from 'styled-components';\r\nimport { Title } from 'src/components'\r\n\r\nconst HomeCardWrapper = styled.div<{ type: string, color: string }>`\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    background-color: ${( props ) => props.color };\r\n    display: flex;\r\n    flex-direction: column;\r\n    cursor : pointer;\r\n    width: 90%;\r\n    height: 80%;\r\n    margin:0 auto;\r\n\r\n    ${( props ) => \r\n      props.type === 'main' \r\n      && css`\r\n      box-shadow: 5px 5px 5px lightGray;\r\n\r\n      &:hover{\r\n        transform: translateX(20px);\r\n      }  \r\n      `\r\n    }\r\n\r\n    ${( props ) => \r\n      props.type === 'sub' \r\n      && css`\r\n        width: 250px;\r\n        height: 120px;\r\n        box-shadow: 2px 2px 2px lightGray;\r\n\r\n        &:hover{\r\n          box-shadow: 5px 5px 5px lightGray;\r\n        }\r\n      `\r\n    }\r\n\r\n  `\r\n\r\nconst HomeCard = ( props : HomeCardProps ) => {\r\n\r\n  const { title, type, color = \"#6A60A9\", children } = props\r\n\r\n  const fontColor = color ==='#6A60A9' || type === 'main' ? '#FEFEFC' : '#746E6E'\r\n\r\n  return(\r\n    <HomeCardWrapper type={ type } color={ color }>\r\n      <Title \r\n        type= { type === 'main'? 'large': 'medium' }\r\n        color= { fontColor } \r\n        style= {{ textShadow: '1px 1px 1px gray' }}\r\n      > \r\n        { title } \r\n      </Title>\r\n      <Title \r\n        type = 'small' \r\n        color= { fontColor }\r\n        style={{ marginTop: type==='main'? '40px': '55px' }}\r\n      > \r\n        { children } \r\n      </Title>\r\n      {\r\n        type ==='main' \r\n        && (\r\n          <Title \r\n            type = 'medium' \r\n            color= 'white' \r\n            style ={{ position: 'absolute', margin: '140px 0px 0px 360px' }} \r\n          >\r\n            Go &gt;\r\n          </Title>\r\n        )\r\n      }\r\n    </HomeCardWrapper>\r\n  )\r\n\r\n}\r\n\r\nexport default HomeCard\r\n\r\ntype HomeCardProps = {\r\n  type?: 'main' | 'sub',\r\n  color?: string,\r\n  title?: Array<string | any> | string,\r\n  children?: Array<string | any> | string\r\n}","import { ClubType } from \"src/types\"\r\nimport { useMemo } from \"react\"\r\nimport { RankItem } from \"./index\"\r\nimport styled from 'styled-components'\r\n\r\nconst RankCardWrpper = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  gap: 7px;\r\n  height: 250px;\r\n`\r\n\r\nconst RankCard = ( props : RankCardProps ) => {\r\n\r\n  const { clubList } = props\r\n\r\n  const rankList = useMemo(() => { \r\n    return clubList.sort(( a, b )=> { return a.ranking - b.ranking }\r\n  )}, [ clubList ] )\r\n\r\n  return(\r\n    <RankCardWrpper>\r\n      {\r\n        rankList.map(( club, index ) => {\r\n          return(\r\n            <RankItem key={ index } club={ club }/>            \r\n          )\r\n        })\r\n      }\r\n    </RankCardWrpper>\r\n  )\r\n\r\n}\r\n\r\nexport default RankCard\r\n\r\ntype RankCardProps = {\r\n  clubList : ClubType[],\r\n}","import { ClubType } from \"src/types\"\r\nimport styled from \"styled-components\"\r\n\r\nconst RankItemWrapper = styled.div`\r\n  display: flex;\r\n  box-sizing: border-box;\r\n  width:50%;\r\n  height: 40px;\r\n  border-radius: 5px;\r\n  background-color: #DEDCEE;\r\n  gap: 40px;\r\n  padding: 10px 20px;\r\n`\r\n\r\nconst RankItem = ( props : RankItemProps ) => {\r\n\r\n  const { club } = props\r\n  const { clubName, ranking } = club\r\n\r\n  return(\r\n    <RankItemWrapper>\r\n      <p style={{ fontWeight: 'bold' }}>{ ranking }</p>\r\n      <img style={{ width: '20px' }} alt=\"이미지\"/>\r\n      <div style={{ width: '100%', textAlign: 'center' }}>\r\n        <p style={{ fontWeight: 'bold' }}>{ clubName }</p>\r\n      </div>\r\n    </RankItemWrapper>\r\n  )\r\n}\r\n\r\nexport default RankItem\r\n\r\ntype RankItemProps = {\r\n  club : ClubType, \r\n}","import { useEffect, useState } from 'react'\r\nimport { GameType } from 'src/types'\r\nimport { LeftIcon, RightIcon} from 'src/components'\r\nimport { GameItem } from './index'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst GameCard = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: row;\r\n  box-shadow: 1px 1px 1px lightGray;\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  height: 90px;\r\n  padding: 0px 20px;\r\n  border: 1px solid lightGray;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  cursor: pointer;\r\n  `\r\nconst TodayGameCard = ( props : GameCardProps ) =>{\r\n\r\n  const { gameList } =  props\r\n\r\n  const navigator = useNavigate();\r\n\r\n  const [ curIndex, setCurIndex ] = useState<number>(0)\r\n  const [ curGame, setCurGame ] = useState<GameType>( gameList[ curIndex ] )\r\n\r\n  const onClickRight = () => {\r\n    curIndex < gameList.length - 1 && setCurIndex(curIndex + 1)\r\n  }\r\n\r\n  const onClickLeft = () => {\r\n    curIndex !==0 && setCurIndex(curIndex - 1)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    setCurGame( gameList[ curIndex ] )\r\n  }, [ curIndex, gameList ] )\r\n\r\n  return(\r\n\r\n    <GameCard>\r\n      <LeftIcon onClick={ onClickLeft }/>\r\n          <GameItem game = { curGame } onClick= {() => navigator(`/select/${ curGame?.chatroomId }`)}/>\r\n      <RightIcon onClick={ onClickRight }/>\r\n    </GameCard>\r\n    \r\n  )\r\n}\r\n\r\nexport default TodayGameCard;\r\n\r\ntype GameCardProps = {\r\n  gameList? : GameType[]\r\n}","import { HomeLayout, MainLayout, Button,Title } from 'src/components'\r\nimport { HomeCard, TodayGameCard, RankCard } from './components'\r\nimport { useState } from 'react'\r\nimport { GameType, ClubType } from '@/types'\r\nimport styled from 'styled-components'\r\n\r\nconst GameWrpper = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: 5px 5px 5px lightGray;\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0px 50px;\r\n  gap: 10px;\r\n`\r\n\r\nconst TableWrpper = styled.table`\r\n  width: 100%;\r\n  height: 60%;\r\n  border-collapse: collapse;\r\n  display: table;\r\n  margin-bottom: 10px;\r\n  th, td {\r\n    display:table-cell; \r\n    vertical-align:middle;\r\n    padding: 6px 10px;\r\n  }\r\n`\r\n\r\nconst Home = () => {\r\n\r\n  const [ gameList, setGameList ] = useState<GameType[]>([\r\n    {\r\n      gameId: 0,\r\n      chatroomId: 0,\r\n      datetime: '20240101',\r\n      homeClubName: 'lg',\r\n      awayClubName: 'kt',\r\n      stadiumName: '잠실',\r\n    },{\r\n      gameId: 0,\r\n      chatroomId: 0,\r\n      datetime: '20240101',\r\n      homeClubName: 'a',\r\n      awayClubName: 'b',\r\n      stadiumName: '잠실',\r\n    }\r\n  ])\r\n\r\n  const [ clubList, setClubList ] = useState<ClubType[]>([\r\n    {\r\n      clubId: 0,\r\n      clubName: 'lg',\r\n      sponsorName: 'lg',\r\n      ranking: 1\r\n    },\r\n    {\r\n      clubId: 1,\r\n      clubName: 'kt',\r\n      sponsorName: 'kt',\r\n      ranking: 2\r\n    },{\r\n      clubId: 2,\r\n      clubName: 'a',\r\n      sponsorName: 'a',\r\n      ranking: 3\r\n    },{\r\n      clubId: 3,\r\n      clubName: 'b',\r\n      sponsorName: 'b',\r\n      ranking: 4\r\n    },{\r\n      clubId: 4,\r\n      clubName: 'c',\r\n      sponsorName: 'c',\r\n      ranking: 6\r\n    },{\r\n      clubId: 5,\r\n      clubName: 'c',\r\n      sponsorName: 'c',\r\n      ranking: 5\r\n    }\r\n  ])\r\n\r\n  return (\r\n    <MainLayout>\r\n      <HomeLayout>\r\n        <TableWrpper>\r\n          <tbody>\r\n            <tr>\r\n              <td rowSpan={2} colSpan={2} style={{ width: '60%' }}>\r\n                <GameWrpper>\r\n                  <Title color='#746E6E'>오늘의 경기</Title>\r\n                  <TodayGameCard gameList = { gameList }/>\r\n                  <Title color='#746E6E'>현재 순위</Title>\r\n                  <RankCard clubList = { clubList }/>\r\n                </GameWrpper>\r\n              </td>\r\n              <td colSpan={2}>\r\n                <HomeCard \r\n                  title= '매칭하러 가기' \r\n                  type= 'main'\r\n                  color= '#6A60A9'>\r\n                  TOGEBALL의 맞춤 알고리즘으로<br/> \r\n                  메이트를 구해줍니다.\r\n                </HomeCard>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan={2}>\r\n                <HomeCard \r\n                  title= '직접 메이트 모집하기' \r\n                  type= 'main'\r\n                  color= '#FBD14B'>\r\n                  자세한 필터 설정으로<br/> \r\n                  직관 메이트를 직접 모집해보세요.\r\n                </HomeCard>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </TableWrpper>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <HomeCard \r\n                  title= '경기별 오픈 채팅방' \r\n                  type= 'sub'\r\n                  color= '#FBD14B'>\r\n                  오늘 경기 외에 모든<br/> \r\n                  경기 일정을 확인해보세요.\r\n                </HomeCard>\r\n              </td>   \r\n              <td>\r\n                <HomeCard \r\n                  title= '메이트 채팅방' \r\n                  type= 'sub'\r\n                  color= '#6A60A9'>\r\n                  오늘 경기 외에 모든<br/> \r\n                  경기 일정을 확인해보세요.\r\n                </HomeCard>\r\n              </td>\r\n              <td>\r\n                <HomeCard \r\n                  title= '경기일정' \r\n                  type= 'sub'\r\n                  color= '#DEDCEE'>\r\n                  오늘 경기 외에 모든<br/> \r\n                  경기 일정을 확인해보세요.\r\n                </HomeCard>\r\n              </td>\r\n              <td>\r\n                <HomeCard \r\n                  title= '자유게시판' \r\n                  type= 'sub'\r\n                  color= '#FFFFFF'>\r\n                  오늘 경기 외에 모든<br/> \r\n                  경기 일정을 확인해보세요.\r\n                </HomeCard>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </HomeLayout>\r\n    </MainLayout>\r\n  )\r\n\r\n}\r\n\r\nexport default Home"],"names":["GameItemWrapper","styled","div","_templateObject","_taggedTemplateLiteral","InfomWrapper","_templateObject2","props","game","onClick","gameId","chatroomId","datetime","homeClubName","awayClubName","stadiumName","_jsxs","children","_jsx","alt","Title","type","HomeCardWrapper","color","css","_templateObject3","title","fontColor","style","textShadow","marginTop","position","margin","RankCardWrpper","clubList","rankList","useMemo","sort","a","b","ranking","map","club","index","RankItem","RankItemWrapper","clubName","fontWeight","width","textAlign","GameCard","gameList","navigator","useNavigate","curIndex","setCurIndex","useState","curGame","setCurGame","useEffect","LeftIcon","onClickLeft","GameItem","concat","RightIcon","onClickRight","length","GameWrpper","TableWrpper","table","Home","setGameList","setClubList","clubId","sponsorName","MainLayout","HomeLayout","rowSpan","colSpan","TodayGameCard","RankCard","HomeCard"],"sourceRoot":""}