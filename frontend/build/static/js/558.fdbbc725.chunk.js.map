{"version":3,"file":"static/js/558.fdbbc725.chunk.js","mappings":"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","sources":["pages/recruit/post/components/TagsInput.tsx","pages/recruit/post/index.tsx"],"sourcesContent":["import { Tag, TagList } from '../../../../components/'\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TagsInputWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  min-height: 36px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst TagItem = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 26px;\r\n  padding: 3px 13px;\r\n  font-size: 13px;\r\n  background-color: #dedcee;\r\n  border: none;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 15px;\r\n  margin-top: 3px;\r\n  height: 15px;\r\n  color: #9ba3a9;\r\n  background-color: inherit;\r\n  border: none;\r\n`;\r\n\r\nconst TagInput = styled.input`\r\n  cursor: text;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  width: 300px;\r\n  font-size: 16px;\r\n  background-color: inherit;\r\n  border: none;\r\n  outline: none;\r\n\r\n  &::placeholder {\r\n    color: #acb5bd;\r\n  }\r\n`;\r\n\r\nexport const TagsInput = () => {\r\n  const [ tagItem, setTagItem ] = useState(\"\");\r\n  const [ tagList, setTagList ] = useState([]);\r\n  const [ placeholder, setPlaceholder] = useState(\"태그를 설정하세요 (최대 10개)\");\r\n\r\n  const duplicateCheck = ( text ) => {\r\n    return text !== \"\" && tagList.indexOf(text) !== -1 ?  false: true;\r\n  } \r\n\r\n  const onKeyDown = ( event ) => {\r\n    if(event.target.value.length === 0 && event.key === 'Backspace' ){\r\n      deleteTagItem( tagList[tagList.length - 1] );\r\n      setTagItem(\"\");\r\n    }\r\n  }\r\n\r\n  const onKeyUp = ( event ) => {\r\n    if (event.target.value.length !== 0 && event.key === \"Enter\" ) {\r\n      if( tagList.length >= 10 ) {\r\n        alert( \"태그는 최대 10개입니다.\" );\r\n        setPlaceholder( \"태그는 최대 10개입니다.\" );\r\n      }\r\n      else if( duplicateCheck(event.target.value) ) setTagList([...tagList, tagItem]);\r\n      setTagItem(\"\");\r\n    }\r\n  };\r\n\r\n  const deleteTagItem = ( item ) => {\r\n    const filteredTagList = tagList.filter(\r\n      ( tagItem ) => tagItem !== item\r\n    );\r\n    setTagList( filteredTagList );\r\n  };\r\n\r\n  return (\r\n    <TagsInputWrapper>\r\n      { tagList.map(( tagItem ) => {\r\n        return (\r\n          <TagItem key={ tagItem }>\r\n            <span style={{ fontWeight: 'bold' }}>#{ tagItem }</span>\r\n            <Button onClick={ () => deleteTagItem( tagItem ) }>X</Button>\r\n          </TagItem>\r\n        );\r\n      })}\r\n      <TagInput\r\n        type=\"text\"\r\n        placeholder={ placeholder }\r\n        onKeyUp={ onKeyUp }\r\n        onKeyDown={ onKeyDown }\r\n        onChange={( event ) => setTagItem( event.target.value )}\r\n        value={ tagItem }\r\n      />\r\n    </TagsInputWrapper>\r\n  );\r\n}","import { Button, InputBox, Select } from 'src/components';\r\nimport { TagsInput } from './components/TagsInput';\r\nimport { MainLayout, HomeLayout } from 'src/components'\r\nimport { useState } from 'react';\r\nimport { styled } from 'styled-components'\r\n\r\nconst Title = styled.div`\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    margin-top: 20px;\r\n`\r\n\r\nconst MatchBtn = styled.button`\r\n    width: 430px;\r\n    height: 48px;\r\n    background-color: #fff; \r\n    border-radius: 20px;\r\n    border: 1px lightgray solid;\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    margin-top: 6px;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nconst Input = styled.textarea<{ maxLength: string }>`\r\n    height: 50px;\r\n    width: 96%;\r\n    border: 1px solid lightgray;\r\n    border-radius: 20px;\r\n    padding: 20px;\r\n`\r\n\r\n\r\nconst RecruitPost = () => {\r\n\r\n    let [inputCount, setInputCount] = useState(0);\r\n\r\n    const onInputHandler = (e) => {\r\n        setInputCount(\r\n            e.target.value.replace(/<br\\s*V?>/gm, '\\n').length\r\n        );\r\n      };\r\n\r\n\r\n    const [teams, setTeams] = useState([\r\n        { value: 'LG', name: 'LG' },\r\n        { value: 'KT', name: 'KT' },\r\n        { value: 'SSG', name: 'SSG' },\r\n        { value: 'NC', name: 'NC' },\r\n        { value: '두산', name: '두산' },\r\n        { value: 'KIA', name: 'KIA' },\r\n        { value: '롯데', name: '롯데' },\r\n        { value: '삼성', name: '삼성' },\r\n        { value: '한화', name: '한화' },\r\n        { value: '키움', name: '키움' },\r\n        { value: '팀무관', name: '팀무관' }\r\n    ])\r\n\r\n    const [seats, setSeats] = useState([\r\n        { value: 'cheeringSeat', name: '응원석' },\r\n        { value: 'tableSeat', name: '테이블석' },\r\n        { value: 'vipSeat', name: 'VIP석' },\r\n        { value: 'outfieldSeat', name: '외야석' }\r\n    ])\r\n\r\n    const [nums, setNums] = useState([\r\n        { value: '1', name: '1' },\r\n        { value: '2', name: '2' },\r\n        { value: '3', name: '3' },\r\n        { value: '4', name: '4' },\r\n        { value: '5', name: '5' },\r\n        { value: '6', name: '6' },\r\n        { value: '7', name: '7' },\r\n        { value: '8', name: '8' },\r\n        { value: '9', name: '9' },\r\n        { value: '10', name: '10' }\r\n    ])\r\n\r\n    return (\r\n        <MainLayout title='직관 메이트 모집하기 '>  \r\n            <HomeLayout>\r\n                <Title>제목(최대 60자)</Title>\r\n                <InputBox height='20px' width='100%'/>\r\n                <MatchBtn>경기를 선택하세요</MatchBtn>\r\n                <div style={{ display: 'flex', gap: '30px' }}>\r\n                    <Select dataSource={ teams } placeholder='응원하는 팀'></Select>\r\n                    <Select dataSource={ seats } placeholder='선호하는 좌석'></Select>\r\n                </div>\r\n                <div style={{ display: 'flex', gap: '30px', marginTop: '6px' }}>\r\n                    <span style={{ fontSize: '20px', padding: '10px 10px 0px 0px', fontWeight: 'bold' }}>인원</span> <Select dataSource={ nums } placeholder='인원' width='140px'></Select>\r\n                </div>\r\n                <div style={{ display: 'flex', gap: '30px'}}>\r\n                    <span style={{ fontSize: '20px', padding: '16px 10px 0px 0px', fontWeight: 'bold' }}>태그</span> <TagsInput></TagsInput>\r\n                </div>\r\n                <span style={{ fontSize: '20px', marginTop: '6px', fontWeight: 'bold' }}> 채팅방 소개</span>\r\n                <Input onChange={ onInputHandler } maxLength=\"300\" />\r\n                <p style={{ textAlign: 'right' }}>\r\n                    <span>{ inputCount }</span>\r\n                    <span>/300 자</span>\r\n                </p>\r\n                <div style={{ display: 'flex', justifyContent: 'right', gap: '10px' }}>\r\n                    <Button type='parti' width='120px'>채팅방 만들기</Button>\r\n                    <Button type='reset' width='90px'>초기화</Button>\r\n                    <Button type='cancel' width='80px'>취소</Button>\r\n                </div>\r\n            </HomeLayout>\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\n\r\nexport default RecruitPost"],"names":["TagsInputWrapper","styled","div","_templateObject","_taggedTemplateLiteral","TagItem","_templateObject2","Button","button","_templateObject3","TagInput","input","_templateObject4","TagsInput","tagItem","setTagItem","useState","tagList","setTagList","placeholder","setPlaceholder","deleteTagItem","item","filteredTagList","filter","_jsxs","children","map","style","fontWeight","_jsx","onClick","type","onKeyUp","event","text","target","value","length","key","alert","indexOf","onKeyDown","onChange","Title","MatchBtn","Input","textarea","RecruitPost","inputCount","setInputCount","teams","setTeams","name","seats","setSeats","nums","setNums","MainLayout","title","HomeLayout","InputBox","height","width","display","gap","Select","dataSource","marginTop","fontSize","padding","e","replace","maxLength","textAlign","justifyContent"],"sourceRoot":""}